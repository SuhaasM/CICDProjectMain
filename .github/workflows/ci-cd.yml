name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Build and Test Backend
      run: |
        cd backend
        chmod +x mvnw
        ./mvnw clean package
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build
        
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and Push Docker Images
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/cicdproject-backend:latest ./backend
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/cicdproject-frontend:latest ./frontend
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cicdproject-backend:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cicdproject-frontend:latest
        
  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to AWS EC2
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        
        # Copy docker-compose file to EC2
        scp -o StrictHostKeyChecking=no -i private_key.pem -P 2222 docker-compose.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/
        
        # SSH into EC2 and deploy
        ssh -o StrictHostKeyChecking=no -i private_key.pem -p 2222 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Login to Docker Hub
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          
          # Pull latest images
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/cicdproject-backend:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/cicdproject-frontend:latest
          
          # Deploy with docker-compose
          docker-compose down
          docker-compose up -d
        EOF
        
        rm -f private_key.pem